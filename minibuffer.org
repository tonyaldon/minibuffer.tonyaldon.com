* minibuffer
:PROPERTIES:
:ONE: minibuffer-one-home
:CUSTOM_ID: /
:MINIBUFFER_CREATED_AT: [2022-11-22 Tue]
:END:
* How to match 47 characters in a string with Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-22-how-to-match-47-characters-in-a-string-with-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-08-28 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=xfIuFNpfYWI
:END:

#+BEGIN_SRC emacs-lisp
(setq
 link
 "[[abbrv:assets/archive/2023-08-09_9c6b04b4-0076-44d0-a241-063a2d899544_2023-08-22T17:43:44+0200.html]]")

(progn
  (string-match "archive/\\(.\\{47\\}\\)" link)
  (match-string 1 link))
#+END_SRC

* How to put the value of an Org property in the kill-ring?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-23-how-to-put-the-value-of-an-org-property-in-the-kill-ring/
:MINIBUFFER_CREATED_AT: [2023-08-28 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=WnjrpR1sUKM
:END:

#+BEGIN_SRC emacs-lisp
(org-entry-get nil "foo")
(kill-new (org-entry-get nil "foo"))
(kill-new (concat (org-entry-get nil "foo") "-baz"))
#+END_SRC

* Do you know how to generate html strings with Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-24-do-you-know-how-to-generate-html-strings-with-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-08-28 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=Gn2HjXwHhHg
:END:

#+BEGIN_SRC emacs-lisp
(require 'jack) ;; https://jack.tonyaldon.com

(with-temp-file "index.html"
  (insert
   (jack-html
    '(:ul
      (:li "foo-0")
      (:li "foo-1")
      (:li "foo-2")))))

;; need `prettier' utility installed - https://prettier.io
(call-process-shell-command "prettier --write index.html" nil 0)
#+END_SRC

- https://jack.tonyaldon.com
- https://prettier.io

* How to add html attributes with the Emacs package Jack?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-25-how-to-add-html-attributes-with-the-emacs-package-jack/
:MINIBUFFER_CREATED_AT: [2023-08-28 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=68NS_2afPw8
:END:

#+BEGIN_SRC emacs-lisp
(require 'jack) ;; https://jack.tonyaldon.com

(jack-html '(:div "foo")) ;; "<div>foo</div>"
(jack-html '(:div (@ :id "myid" :class "myclass") "foo"))
;; "<div id=\"myid\" class=\"myclass\">foo</div>"
(jack-html '(:div/id.myclass1.myclass2 "foo"))
;; "<div id=\"id\" class=\"myclass1 myclass2\">foo</div>"
#+END_SRC

- https://jack.tonyaldon.com

* How to check for a regexp match after point with Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-26-how-to-check-for-a-regexp-match-after-point-with-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-08-28 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=cxpTi11pYXI
:END:

#+BEGIN_SRC emacs-lisp
(looking-at "bar")
(looking-at "foo")
(when (looking-at "foo") (insert "---"))
(when (looking-at "bar") (insert "---"))
#+END_SRC

* How to insert foo at the end of buffer without changing point with Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-27-how-to-insert-foo-at-the-end-of-buffer-without-changing-point-with-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-08-28 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=KA3cghsUVaM
:END:

#+BEGIN_SRC emacs-lisp
(save-excursion
  (goto-char (point-max))
  (insert "foo"))
#+END_SRC

* How to check for the states of buffer-local variables in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-28-how-to-check-for-the-states-of-buffer-local-variables-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-08-28 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=HhGVR7xhXis
:END:

#+BEGIN_SRC emacs-lisp
;; M-x pp-eval-expression
(buffer-local-variables)
;; major-mode
;; buffer-read-only
#+END_SRC

* How to turn a function into a command in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-29-how-to-turn-a-function-into-a-command-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-08-29 Tue]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=z8IJz25EDeA
:END:

#+BEGIN_SRC emacs-lisp
(defun foo ()
  "Print \"bar\""
  (interactive)
  (message "bar"))

(foo)

(global-set-key (kbd "C-<f1>") #'foo)
#+END_SRC

* How to insert strings in a given buffer in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-30-how-to-insert-strings-in-a-given-buffer-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-08-30 Wed]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=QXlmNjYpjNY
:END:

#+BEGIN_SRC emacs-lisp
(with-current-buffer (get-buffer-create "*foo*")
  (erase-buffer)
  (insert "foo"))
#+END_SRC

* How to list files in a given directory in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-08-31-how-to-list-files-in-a-given-directory-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-08-31 Thu]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=5PgMa8bzcv4
:END:

#+BEGIN_SRC emacs-lisp
(directory-files-and-attributes ".")
(directory-files-and-attributes "." t)
(dolist (f (directory-files-and-attributes "./emacs/" t))
  (message (car f)))
#+END_SRC

* How to replace regexp in buffers in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-01-how-to-replace-regexp-in-buffers-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-01 Fri]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=sPup0RjLLmo
:END:

Note: Although it works, how I used ~replace-regexp~ in this video is
not recommended in Elisp programs in general.

#+BEGIN_SRC emacs-lisp
(replace-regexp "-b" "^^^^")
(replace-regexp "-b" "^^^^" nil (point-min) (point-max))
(replace-regexp "-b" "^^^^" nil (point-at-bol) (point-at-eol))
#+END_SRC

* How to search for regexp in buffers in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-02-how-to-search-for-regexp-in-buffers-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-02 Sat]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=LD7dNcBavnI
:END:

#+BEGIN_SRC emacs-lisp
(re-search-forward "^foo")
(point)
(re-search-forward "^foo" nil t)
(re-search-forward "^foo" 103 t)
#+END_SRC

* What influence does case-fold-search have on searches in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-03-what-influence-does-case-fold-search-have-on-searches-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-03 Sun]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=eGZCZe5qLUE
:END:

#+BEGIN_SRC emacs-lisp
case-fold-search ;; t
(let ((case-fold-search nil))
  (re-search-forward "^foo"))
(let ((case-fold-search t))
  (re-search-forward "^Foo"))
#+END_SRC

* How to manipulate the match data in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-04-how-to-manipulate-the-match-data-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-04 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=G6bNaoyKW4c
:END:

#+BEGIN_SRC emacs-lisp
(re-search-forward "foo-\\(.*\\)-baz")
(progn
  (re-search-forward "foo-\\(.*\\)-baz")
  (match-string 0))
(progn
  (re-search-forward "foo-\\(.*\\)-baz")
  (match-string 1))
(progn
  (re-search-forward "foo-\\(.*\\)-baz")
  (replace-match "^^^"))
(progn
  (re-search-forward "foo-\\(.*\\)-baz")
  (replace-match "^^^" nil nil nil 1))
#+END_SRC

* How to replace regexp in buffers in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-05-how-to-replace-regexp-in-buffers-in-emacs-lisp-with-a-while-loop/
:MINIBUFFER_CREATED_AT: [2023-09-05 Tue]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=CV_YB4t0JcQ
:END:

#+BEGIN_SRC emacs-lisp
(replace-regexp "foo" "XXX")
(while (re-search-forward "foo" nil t)
  (replace-match "XXX"))
#+END_SRC

* How to get the content in buffers in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-06-how-to-get-the-content-in-buffers-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-06 Wed]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=H987Y7FxiJw
:END:

#+BEGIN_SRC emacs-lisp
(buffer-substring (point-at-bol 3) (point-at-eol 3))
(buffer-substring-no-properties (point-at-bol 3) (point-at-eol 3))
#+END_SRC

* How to manipulate vectors in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-07-how-to-manipulate-vectors-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-07 Thu]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=71U2FqCw7zQ
:END:

#+BEGIN_SRC emacs-lisp
(vector (+ 1 1) nil "foo") ;; [2 nil "foo"]
[(+ 1 1) nil "foo"] ;; [(+ 1 1) nil "foo"]

(setq vec1 [a b c]) ;; [a b c]
(aref vec1 0) ;; a
(aset vec1 0 'foo) ;; foo
vec1 ;; [foo b c]

(setq vec2 (seq-copy vec1)) ;; [foo b c]
(aset vec2 0 'bar) ;; bar
vec2 ;; [bar b c]
vec1 ;; [foo b c]
#+END_SRC

* How to swap elements in vectors in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-08-how-to-swap-elements-in-vectors-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-08 Fri]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=W_FAwDN01No
:END:

#+BEGIN_SRC emacs-lisp
(setq vec [foo bar baz]) ;; [foo bar baz]
(aref vec 0) ;; foo
(aref vec 2) ;; baz
(cl-rotatef (aref vec 0) (aref vec 2))
vec ;; [baz bar foo]
#+END_SRC

* How to run a unix utility on file at point in dired in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-09-how-to-run-a-unix-utility-on-file-at-point-in-dired-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-09 Sat]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=0kzbFsRB4vk
:END:

#+BEGIN_SRC emacs-lisp
(let* ((fn (dired-file-name-at-point))
       (fn-base (file-name-base fn))
       (cmd (format "convert %s %s" fn (concat fn-base ".jpg"))))
  (shell-command cmd))
#+END_SRC

* How to copy the current line below in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-10-how-to-copy-the-current-line-below-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-10 Sun]
:MINIBUFFER_UPDATED_AT: [2023-09-11 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=IbrgXydt6iM
:END:

#+BEGIN_SRC emacs-lisp
(defun copy-current-line-below ()
  "Copy current line and past it below"
  (interactive)
  (let ((line (buffer-substring (point-at-bol) (point-at-eol))))
    (save-excursion
      (forward-line)
      (insert line "\n"))))
#+END_SRC

You might be interested in:

- [[#/2023-09-06-how-to-get-the-content-in-buffers-in-emacs-lisp/][How to get the content in buffers in Emacs Lisp?]] (~buffer-substring~) and
- [[#/2023-08-27-how-to-insert-foo-at-the-end-of-buffer-without-changing-point-with-emacs-lisp/][How to insert foo at the end of buffer without changing point with
  Emacs Lisp?]] (~save-excursion~).

* How to start a shell in a window below in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-11-how-to-start-a-shell-in-a-window-below-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-11 Mon]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=3tybE9IYKuA
:END:

#+BEGIN_SRC emacs-lisp
(progn
  (select-window (split-window-below -8))
  (shell))
#+END_SRC

* How to move the point around in buffers in Emacs Lisp?
:PROPERTIES:
:ONE: minibuffer-one-episode
:CUSTOM_ID: /2023-09-12-how-to-move-the-point-around-in-buffers-in-emacs-lisp/
:MINIBUFFER_CREATED_AT: [2023-09-12 Tue]
:MINIBUFFER_YOUTUBE_LINK: https://www.youtube.com/watch?v=6e5cyzo6b-s
:END:

#+BEGIN_SRC emacs-lisp
(point) ;; 349
(point-min) ;; 1
(point-max) ;; 385
(goto-char 349)
(goto-char (point-min))
(goto-char (point-max))

(forward-char 4)
(backward-char 4)

(beginning-of-line)
(end-of-line)
#+END_SRC
